# Comprehensive CI/CD System Configuration
# Copy this file to .env and update the values as needed

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================
NODE_ENV=production
LOG_LEVEL=info

# =============================================================================
# API SERVER CONFIGURATION
# =============================================================================
API_PORT=3000
CORS_ORIGIN=*

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=codegen_db
DATABASE_USER=codegen_user
DATABASE_PASSWORD=your_secure_password_here
DATABASE_SSL=false
DATABASE_MAX_CONNECTIONS=20
DATABASE_IDLE_TIMEOUT=30000
DATABASE_CONNECTION_TIMEOUT=2000

# Database URL (alternative to individual settings)
# DATABASE_URL=postgresql://codegen_user:password@localhost:5432/codegen_db

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# =============================================================================
# CODEGEN INTEGRATION CONFIGURATION
# =============================================================================
CODEGEN_API_KEY=sk-ce027fa7-3c8d-4beb-8c86-ed8ae982ac99
CODEGEN_ORG_ID=323
CODEGEN_API_URL=https://api.codegen.sh
CODEGEN_TIMEOUT=60000
CODEGEN_MAX_RETRIES=3
CODEGEN_ENABLE_MOCK_MODE=false

# Prompt generation settings
CODEGEN_INCLUDE_CODEBASE_CONTEXT=true
CODEGEN_INCLUDE_DEPENDENCIES=true
CODEGEN_INCLUDE_VALIDATION_CRITERIA=true
CODEGEN_PROMPT_STYLE=comprehensive

# =============================================================================
# WORKFLOW ORCHESTRATION CONFIGURATION
# =============================================================================
MAX_CONCURRENT_WORKFLOWS=5
WORKFLOW_TIMEOUT=300000
WORKFLOW_RETRY_DELAY=5000
ENABLE_VALIDATION=true
ENABLE_NOTIFICATIONS=true

# Workflow step timeouts (in milliseconds)
VALIDATE_TASK_TIMEOUT=30000
GENERATE_PROMPT_TIMEOUT=120000
CREATE_PR_TIMEOUT=300000
VALIDATE_PR_TIMEOUT=180000
NOTIFY_COMPLETION_TIMEOUT=30000

# =============================================================================
# METRICS AND MONITORING CONFIGURATION
# =============================================================================
METRICS_PORT=9090
METRICS_RETENTION_PERIOD=604800000
METRICS_AGGREGATION_INTERVAL=60000
ENABLE_DETAILED_METRICS=true

# Prometheus configuration
PROMETHEUS_PORT=9091
PROMETHEUS_SCRAPE_INTERVAL=15s

# Grafana configuration
GRAFANA_PORT=3001
GRAFANA_PASSWORD=admin

# =============================================================================
# NGINX CONFIGURATION (if using reverse proxy)
# =============================================================================
NGINX_PORT=80
NGINX_SSL_PORT=443

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# JWT secret for authentication (if implementing auth)
JWT_SECRET=your_jwt_secret_here
JWT_EXPIRATION=24h

# API key for internal service communication
INTERNAL_API_KEY=your_internal_api_key_here

# Encryption key for sensitive data
ENCRYPTION_KEY=your_encryption_key_here

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================
# Email notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_app_password
SMTP_FROM=noreply@yourcompany.com

# Slack notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_CHANNEL=#ci-cd-notifications

# Discord notifications
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================
# GitHub integration
GITHUB_TOKEN=your_github_token_here
GITHUB_WEBHOOK_SECRET=your_webhook_secret_here

# Linear integration
LINEAR_API_KEY=your_linear_api_key_here
LINEAR_WEBHOOK_SECRET=your_linear_webhook_secret_here

# Claude Code validation integration
CLAUDE_API_KEY=your_claude_api_key_here
CLAUDE_MODEL=claude-3-sonnet-20240229

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================
# Set to true for development mode
DEVELOPMENT_MODE=false

# Mock mode for testing without external APIs
MOCK_MODE=false

# Debug logging
DEBUG=comprehensive-cicd:*

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================
# Docker Compose profiles
COMPOSE_PROFILES=default

# To enable monitoring stack, use:
# COMPOSE_PROFILES=default,with-monitoring

# To enable nginx reverse proxy, use:
# COMPOSE_PROFILES=default,with-nginx

# To enable both monitoring and nginx, use:
# COMPOSE_PROFILES=default,with-monitoring,with-nginx

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Node.js memory settings
NODE_OPTIONS=--max-old-space-size=2048

# Connection pool settings
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_POOL_IDLE=10000

# Cache settings
CACHE_TTL=3600
CACHE_MAX_SIZE=1000

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================
# Database backup settings
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_S3_REGION=us-east-1

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_FORMAT=json
LOG_FILE_PATH=./logs/comprehensive-cicd.log
LOG_MAX_SIZE=100m
LOG_MAX_FILES=10
LOG_DATE_PATTERN=YYYY-MM-DD

# =============================================================================
# HEALTH CHECK CONFIGURATION
# =============================================================================
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_RETRIES=3

# =============================================================================
# FEATURE FLAGS
# =============================================================================
FEATURE_ADVANCED_ANALYTICS=true
FEATURE_AUTO_SCALING=false
FEATURE_MULTI_TENANT=false
FEATURE_AUDIT_LOGGING=true
FEATURE_RATE_LIMITING=true

# =============================================================================
# EXAMPLE VALUES FOR QUICK SETUP
# =============================================================================
# For quick local development, you can use these example values:
# DATABASE_PASSWORD=dev_password_123
# REDIS_PASSWORD=dev_redis_123
# JWT_SECRET=dev_jwt_secret_very_long_and_secure
# INTERNAL_API_KEY=dev_internal_api_key_123
# ENCRYPTION_KEY=dev_encryption_key_32_chars_long

# =============================================================================
# PRODUCTION SECURITY NOTES
# =============================================================================
# 1. Generate strong, unique passwords for all services
# 2. Use environment-specific secrets management (AWS Secrets Manager, etc.)
# 3. Enable SSL/TLS for all external communications
# 4. Regularly rotate API keys and passwords
# 5. Use least-privilege access principles
# 6. Enable audit logging for all sensitive operations
# 7. Implement proper backup and disaster recovery procedures

