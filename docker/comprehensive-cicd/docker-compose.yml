version: '3.8'

services:
  # PostgreSQL Database for Task Storage
  postgres:
    image: postgres:15-alpine
    container_name: voltagent-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-voltagent_tasks}
      POSTGRES_USER: ${DB_USER:-software_developer}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/migrations:/migrations
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - cicd-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-software_developer} -d ${DB_NAME:-voltagent_tasks}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Redis for Caching and Session Management
  redis:
    image: redis:7-alpine
    container_name: voltagent-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - cicd-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Task Storage Service
  task-storage-service:
    build:
      context: ../../
      dockerfile: docker/comprehensive-cicd/Dockerfile.task-storage
    container_name: voltagent-task-storage
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-voltagent_tasks}
      - DB_USER=${DB_USER:-software_developer}
      - DB_PASSWORD=${DB_PASSWORD:-secure_password}
      - DB_SSL_MODE=${DB_SSL_MODE:-disable}
      - DB_POOL_MIN_SIZE=${DB_POOL_MIN_SIZE:-5}
      - DB_POOL_MAX_SIZE=${DB_POOL_MAX_SIZE:-20}
      - DB_COMMAND_TIMEOUT=${DB_COMMAND_TIMEOUT:-60000}
      - DB_CONNECTION_TIMEOUT=${DB_CONNECTION_TIMEOUT:-30000}
      - DB_IDLE_TIMEOUT=${DB_IDLE_TIMEOUT:-600000}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - ENABLE_QUERY_LOGGING=${ENABLE_QUERY_LOGGING:-false}
      - ENABLE_SLOW_QUERY_LOGGING=${ENABLE_SLOW_QUERY_LOGGING:-true}
      - SLOW_QUERY_THRESHOLD_MS=${SLOW_QUERY_THRESHOLD_MS:-1000}
      - ENABLE_CONNECTION_POOLING=${ENABLE_CONNECTION_POOLING:-true}
      - ENABLE_CONTEXT_CACHING=${ENABLE_CONTEXT_CACHING:-true}
      - CONTEXT_CACHE_TTL=${CONTEXT_CACHE_TTL:-3600}
      - ENABLE_CONTEXT_COMPRESSION=${ENABLE_CONTEXT_COMPRESSION:-true}
      - MAX_CONTEXT_SIZE_MB=${MAX_CONTEXT_SIZE_MB:-10}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cicd-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # CI/CD API Server
  cicd-api-server:
    build:
      context: ../../
      dockerfile: docker/comprehensive-cicd/Dockerfile.cicd-api
    container_name: voltagent-cicd-api
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - API_PORT=${API_PORT:-3001}
      - API_HOST=${API_HOST:-0.0.0.0}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-voltagent_tasks}
      - DB_USER=${DB_USER:-software_developer}
      - DB_PASSWORD=${DB_PASSWORD:-secure_password}
      - DB_SSL_MODE=${DB_SSL_MODE:-disable}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - ENABLE_CORS=${ENABLE_CORS:-true}
      - ENABLE_COMPRESSION=${ENABLE_COMPRESSION:-true}
      - ENABLE_WEBSOCKET=${ENABLE_WEBSOCKET:-true}
    ports:
      - "${API_PORT:-3001}:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      task-storage-service:
        condition: service_healthy
    networks:
      - cicd-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: voltagent-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    depends_on:
      - cicd-api-server
    networks:
      - cicd-network
    restart: unless-stopped

  # Monitoring with Prometheus (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: voltagent-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - cicd-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for Visualization (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: voltagent-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    depends_on:
      - prometheus
    networks:
      - cicd-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  cicd-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

